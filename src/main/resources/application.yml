server:
  port: 8081
spring:
  application:
    name: listener_service
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate.format_sql: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost:5432}/postgres
    username: "postgres"
    password: "0000"
    driverClassName: org.postgresql.Driver
#  liquibase:
#    enabled: true
#    change-log: db/changelog/db.changelog-master.xml

logging:
  level:
    ROOT: DEBUG
    ru.t1.java.demo.controller.ClientController: DEBUG
    org.apache.kafka: INFO
    org.hibernate.SQL: INFO

t1:
  scan-path: ru.t1.java.demo
  kafka:
    bootstrap:
      server: ${KAFKA_SERVER:localhost:9092}
    consumer:
      group-id: t1-demo
      auto-offset-reset: earliest
      max.poll.records: 10
      session-timeout: 1000
      heartbeat.interval: 3000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max.poll.interval.ms: 300000
    producer:
      acks: all
      retries: 3
      linger.ms: 1
      transaction-id-prefix: tx-
#      request.timeout.ms: 5000
#      delivery.timeout.ms: 60000
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      enable: true
    topic:
      client_registration: t1_demo_client_registration
      client_id_registered: t1_demo_client_registered
      client_transactions: t1_demo_client_transactions
      t1_demo_accounts: _t1_demo_accounts
      t1_demo_transactions: _t1_demo_transactions
      t1_demo_transaction_accept: _t1_demo_transaction_accept
      t1_demo_transaction_result: _t1_demo_transaction_result
      metrics: t1_demo_metrics
    listener:
      poll-timeout: 3000

